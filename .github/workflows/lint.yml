name: Lint and Format Code

on:
  pull_request:
    branches:
      - main

jobs:
  lint-and-format:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Um sicherzustellen, dass die vollst채ndige Git-Historie verf체gbar ist

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install dependencies in server directory
        working-directory: ./server
        run: npm install

      - name: Run lint in server directory
        id: lint_server
        working-directory: ./server
        run: npm run lint > lint-server-output.txt || echo "failed" > lint-server-fail.txt

      - name: Run format in server directory
        working-directory: ./server
        run: npm run format

      # - name: Install dependencies in web directory
      #   working-directory: ./web
      #   run: npm install

      # - name: Run format:fix in web directory
      #   working-directory: ./web
      #   run: npm run format:fix

      # - name: Run lint:fix in web directory
      #   id: lint_web
      #   working-directory: ./web
      #   run: npm run lint:fix > lint-web-output.txt || echo "failed" > lint-web-fail.txt

      - name: Check if linting failed and post a comment
        if: always()
        run: |
          server_errors=$(cat lint-server-fail.txt 2>/dev/null)
          web_errors=$(cat lint-web-fail.txt 2>/dev/null)
          if [[ "$server_errors" == "failed" || "$web_errors" == "failed" ]]; then
            server_output=$(cat lint-server-output.txt 2>/dev/null)
            web_output=$(cat lint-web-output.txt 2>/dev/null)
            echo "Failed Linting Output:" > comment-body.txt
            echo "Server Linting Issues:" >> comment-body.txt
            echo "\`\`\`" >> comment-body.txt
            echo "$server_output" >> comment-body.txt
            echo "\`\`\`" >> comment-body.txt
            echo "Web Linting Issues:" >> comment-body.txt
            echo "\`\`\`" >> comment-body.txt
            echo "$web_output" >> comment-body.txt
            echo "\`\`\`" >> comment-body.txt
            gh pr comment "$PR_URL" --body "$(cat comment-body.txt)"
          fi
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Weiterf체hrende Schritte wie Branch-Erstellung und PR-Erstellung hier einf체gen.
